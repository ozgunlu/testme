// <auto-generated />
using System;
using DivitOtoyol.Modules.Cameras.Shared.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DivitOtoyol.Modules.Cameras.Shared.Data.Migrations.Cameras
{
    [DbContext(typeof(CameraDbContext))]
    partial class CameraDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DivitOtoyol.Modules.Cameras.Cameras.Models.Camera", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("BiosName")
                        .HasColumnType("text")
                        .HasColumnName("bios_name");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created")
                        .HasDefaultValueSql("now()");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnName("created_by");

                    b.Property<string>("Ip")
                        .HasColumnType("text")
                        .HasColumnName("ip");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<long>("OriginalVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint")
                        .HasColumnName("original_version");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("text")
                        .HasColumnName("serial_number");

                    b.HasKey("Id")
                        .HasName("pk_cameras");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_cameras_id");

                    b.ToTable("cameras", "camera");
                });

            modelBuilder.Entity("DivitOtoyol.Modules.Cameras.Cameras.Models.Camera", b =>
                {
                    b.OwnsOne("DivitOtoyol.Modules.Cameras.Cameras.ValueObjects.LocationInformation", "LocationInformation", b1 =>
                        {
                            b1.Property<long>("CameraId")
                                .HasColumnType("bigint")
                                .HasColumnName("id");

                            b1.Property<long>("Id")
                                .HasColumnType("bigint")
                                .HasColumnName("location_information_id");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("location_information_name");

                            b1.HasKey("CameraId");

                            b1.ToTable("cameras", "camera");

                            b1.WithOwner()
                                .HasForeignKey("CameraId")
                                .HasConstraintName("fk_cameras_cameras_id");
                        });

                    b.Navigation("LocationInformation")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
